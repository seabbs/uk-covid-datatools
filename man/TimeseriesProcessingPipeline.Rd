% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TimeseriesProcessingPipeline.R
\name{TimeseriesProcessingPipeline}
\alias{TimeseriesProcessingPipeline}
\title{General timeseries processing}
\description{
General timeseries processing

General timeseries processing
}
\section{Super classes}{
\code{\link[ukcovidtools:PassthroughFilesystemCache]{ukcovidtools::PassthroughFilesystemCache}} -> \code{\link[ukcovidtools:CovidTimeseriesProvider]{ukcovidtools::CovidTimeseriesProvider}} -> \code{TimeseriesProcessingPipeline}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{TimeseriesProcessingPipeline$new()}}
\item \href{#method-incidenceFromCumulative}{\code{TimeseriesProcessingPipeline$incidenceFromCumulative()}}
\item \href{#method-cumulativeFromIncidence}{\code{TimeseriesProcessingPipeline$cumulativeFromIncidence()}}
\item \href{#method-standardGrouping}{\code{TimeseriesProcessingPipeline$standardGrouping()}}
\item \href{#method-aggregateAge}{\code{TimeseriesProcessingPipeline$aggregateAge()}}
\item \href{#method-aggregateGender}{\code{TimeseriesProcessingPipeline$aggregateGender()}}
\item \href{#method-aggregateSubgroup}{\code{TimeseriesProcessingPipeline$aggregateSubgroup()}}
\item \href{#method-aggregateSource}{\code{TimeseriesProcessingPipeline$aggregateSource()}}
\item \href{#method-aggregateGeography}{\code{TimeseriesProcessingPipeline$aggregateGeography()}}
\item \href{#method-imputeAndWeeklyAverage}{\code{TimeseriesProcessingPipeline$imputeAndWeeklyAverage()}}
\item \href{#method-completeAndRemoveAnomalies}{\code{TimeseriesProcessingPipeline$completeAndRemoveAnomalies()}}
\item \href{#method-smoothAndSlopeTimeseries}{\code{TimeseriesProcessingPipeline$smoothAndSlopeTimeseries()}}
\item \href{#method-logIncidenceStats}{\code{TimeseriesProcessingPipeline$logIncidenceStats()}}
\item \href{#method-estimateGrowthRate}{\code{TimeseriesProcessingPipeline$estimateGrowthRate()}}
\item \href{#method-estimateRtQuick}{\code{TimeseriesProcessingPipeline$estimateRtQuick()}}
\item \href{#method-estimateRt}{\code{TimeseriesProcessingPipeline$estimateRt()}}
\item \href{#method-defaultUKAssumptions}{\code{TimeseriesProcessingPipeline$defaultUKAssumptions()}}
\item \href{#method-estimateRtWithAssumptions}{\code{TimeseriesProcessingPipeline$estimateRtWithAssumptions()}}
\item \href{#method-estimateVolatilty}{\code{TimeseriesProcessingPipeline$estimateVolatilty()}}
\item \href{#method-plotRt}{\code{TimeseriesProcessingPipeline$plotRt()}}
\item \href{#method-plotGrowthRate}{\code{TimeseriesProcessingPipeline$plotGrowthRate()}}
\item \href{#method-plotWindowedGrowthRate}{\code{TimeseriesProcessingPipeline$plotWindowedGrowthRate()}}
\item \href{#method-plotDefault}{\code{TimeseriesProcessingPipeline$plotDefault()}}
\item \href{#method-plotIncidenceQuantiles}{\code{TimeseriesProcessingPipeline$plotIncidenceQuantiles()}}
\item \href{#method-plotIncidenceRollmean}{\code{TimeseriesProcessingPipeline$plotIncidenceRollmean()}}
\item \href{#method-setSerialInterval}{\code{TimeseriesProcessingPipeline$setSerialInterval()}}
\item \href{#method-printSerialInterval}{\code{TimeseriesProcessingPipeline$printSerialInterval()}}
\item \href{#method-printSerialIntervalSources}{\code{TimeseriesProcessingPipeline$printSerialIntervalSources()}}
\item \href{#method-defaultSerialInterval}{\code{TimeseriesProcessingPipeline$defaultSerialInterval()}}
\item \href{#method-resampledSerialInterval}{\code{TimeseriesProcessingPipeline$resampledSerialInterval()}}
\item \href{#method-midmarketSerialInterval}{\code{TimeseriesProcessingPipeline$midmarketSerialInterval()}}
\item \href{#method-clone}{\code{TimeseriesProcessingPipeline$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="ageCatToFactor">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-ageCatToFactor}{\code{ukcovidtools::PassthroughFilesystemCache$ageCatToFactor()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="ageToAgeCat">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-ageToAgeCat}{\code{ukcovidtools::PassthroughFilesystemCache$ageToAgeCat()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="breakFromCats">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-breakFromCats}{\code{ukcovidtools::PassthroughFilesystemCache$breakFromCats()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="cutByAge">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-cutByAge}{\code{ukcovidtools::PassthroughFilesystemCache$cutByAge()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="download">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-download}{\code{ukcovidtools::PassthroughFilesystemCache$download()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="downloadAndUnzip">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-downloadAndUnzip}{\code{ukcovidtools::PassthroughFilesystemCache$downloadAndUnzip()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="downloadDaily">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-downloadDaily}{\code{ukcovidtools::PassthroughFilesystemCache$downloadDaily()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="getDaily">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-getDaily}{\code{ukcovidtools::PassthroughFilesystemCache$getDaily()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="getHashCached">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-getHashCached}{\code{ukcovidtools::PassthroughFilesystemCache$getHashCached()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="getSaved">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-getSaved}{\code{ukcovidtools::PassthroughFilesystemCache$getSaved()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="importTimeseries">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-importTimeseries}{\code{ukcovidtools::PassthroughFilesystemCache$importTimeseries()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="normaliseGender">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-normaliseGender}{\code{ukcovidtools::PassthroughFilesystemCache$normaliseGender()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="CovidTimeseriesProvider" data-id="complete">}\href{../../ukcovidtools/html/CovidTimeseriesProvider.html#method-complete}{\code{ukcovidtools::CovidTimeseriesProvider$complete()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="CovidTimeseriesProvider" data-id="describe">}\href{../../ukcovidtools/html/CovidTimeseriesProvider.html#method-describe}{\code{ukcovidtools::CovidTimeseriesProvider$describe()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="CovidTimeseriesProvider" data-id="describeErrors">}\href{../../ukcovidtools/html/CovidTimeseriesProvider.html#method-describeErrors}{\code{ukcovidtools::CovidTimeseriesProvider$describeErrors()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="CovidTimeseriesProvider" data-id="fixDatesAndNames">}\href{../../ukcovidtools/html/CovidTimeseriesProvider.html#method-fixDatesAndNames}{\code{ukcovidtools::CovidTimeseriesProvider$fixDatesAndNames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="CovidTimeseriesProvider" data-id="timeseriesQA">}\href{../../ukcovidtools/html/CovidTimeseriesProvider.html#method-timeseriesQA}{\code{ukcovidtools::CovidTimeseriesProvider$timeseriesQA()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="CovidTimeseriesProvider" data-id="trimNAs">}\href{../../ukcovidtools/html/CovidTimeseriesProvider.html#method-trimNAs}{\code{ukcovidtools::CovidTimeseriesProvider$trimNAs()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$new(providerController, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-incidenceFromCumulative"></a>}}
\subsection{Method \code{incidenceFromCumulative()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$incidenceFromCumulative(covidTimeseries, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cumulativeFromIncidence"></a>}}
\subsection{Method \code{cumulativeFromIncidence()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$cumulativeFromIncidence(covidTimeseries, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-standardGrouping"></a>}}
\subsection{Method \code{standardGrouping()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$standardGrouping(ts, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-aggregateAge"></a>}}
\subsection{Method \code{aggregateAge()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$aggregateAge(covidTimeseries, fn = sum, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-aggregateGender"></a>}}
\subsection{Method \code{aggregateGender()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$aggregateGender(covidTimeseries, fn = sum, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-aggregateSubgroup"></a>}}
\subsection{Method \code{aggregateSubgroup()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$aggregateSubgroup(covidTimeseries, fn = sum, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-aggregateSource"></a>}}
\subsection{Method \code{aggregateSource()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$aggregateSource(
  covidTimeseries,
  namedListOfSources = list(`All sources` = unique(covidTimeseries$source)),
  fn = sum,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-aggregateGeography"></a>}}
\subsection{Method \code{aggregateGeography()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$aggregateGeography(
  covidTimeseries,
  targetCodeTypes,
  completeness = "source",
  fn = sum,
  keepOriginal = TRUE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{completeness}}{should the mapping be complete? if the mapping is "source" complete it will only be successfull if all source codes are present when mapping to a higher region. if the mapping is target, then only if all the target codes are represented. Or both if the mapping must be complete at both ends.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-imputeAndWeeklyAverage"></a>}}
\subsection{Method \code{imputeAndWeeklyAverage()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$imputeAndWeeklyAverage(
  covidTimeseries,
  window = 7,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-completeAndRemoveAnomalies"></a>}}
\subsection{Method \code{completeAndRemoveAnomalies()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$completeAndRemoveAnomalies(
  r0Timeseries,
  outlier_sd = 5,
  window = 9,
  valueVar = "value",
  originalValueVar = "value.original",
  precision = 1e-05
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-smoothAndSlopeTimeseries"></a>}}
\subsection{Method \code{smoothAndSlopeTimeseries()}}{
Calculate an estimate of rate of change of Rt using a loess
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$smoothAndSlopeTimeseries(
  r0Timeseries,
  smoothExpr,
  window = 14,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{R0timeseries}}{a grouped df contianing R0 timeseries including a date and a `Median(R)` column from EpiEstim}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-logIncidenceStats"></a>}}
\subsection{Method \code{logIncidenceStats()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$logIncidenceStats(
  covidTimeseries,
  valueVar = "value",
  growthRateWindow = 7,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-estimateGrowthRate"></a>}}
\subsection{Method \code{estimateGrowthRate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$estimateGrowthRate(
  covidTimeseries,
  window = self$rtWindow,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-estimateRtQuick"></a>}}
\subsection{Method \code{estimateRtQuick()}}{
Calculates a survival R(t) curve on grouped data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$estimateRtQuick(
  covidTimeseries,
  valueVar = "RollMean.value",
  window = self$rtWindow,
  config = self$rtConfig,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{covidTimeseries}}{a covid timeseries data frame}

\item{\code{valueVar}}{- the column to calculate an R(t) for - usually "RollMean.value"}

\item{\code{window}}{- the width of the smoothing function applied (default 2)}

\item{\code{config}}{An object of class estimate_R_config, as returned by function EpiEstim::make_config.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a dataframe with groupwise Rt estimates
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-estimateRt"></a>}}
\subsection{Method \code{estimateRt()}}{
Calculates a survival R(t) curve on grouped data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$estimateRt(
  covidTimeseries,
  valueVar = "RollMean.value",
  window = self$rtWindow,
  config = self$rtConfig,
  method = self$rtMethod,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{covidTimeseries}}{a covid timeseries data frame}

\item{\code{valueVar}}{- the column to calculate an R(t) for - usually "RollMean.value"}

\item{\code{window}}{- the width of the smoothing function applied (default 2)}

\item{\code{config}}{An object of class estimate_R_config, as returned by function EpiEstim::make_config.}

\item{\code{dateVar}}{- the variable containing the seqence of dates}

\item{\code{incidenceVar}}{- the sequence of daily incidence}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a dataframe with groupwise Rt estimates
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-defaultUKAssumptions"></a>}}
\subsection{Method \code{defaultUKAssumptions()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$defaultUKAssumptions()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-estimateRtWithAssumptions"></a>}}
\subsection{Method \code{estimateRtWithAssumptions()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$estimateRtWithAssumptions(
  covidTimeseries,
  valueVar = "RollMean.value",
  window = self$rtWindow,
  config = self$rtConfig,
  method = self$rtMethod,
  assumptions = self$defaultUKAssumptions(),
  dateRange = as.Date(c(min(covidTimeseries$date), max(covidTimeseries$date)),
    "1970-01-01"),
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-estimateVolatilty"></a>}}
\subsection{Method \code{estimateVolatilty()}}{
calculate a volatility statistic for the timeseries based on previous N days
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$estimateVolatilty(
  covidTimeseries,
  valueVar,
  window = 28
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{valueVar}}{- value for which the volatility being calculated}

\item{\code{window}}{- the min (and optionally max) dates to display as a YYYY-MM-DD character (or anything that can be coerced to a Date)}

\item{\code{df}}{a df containing a timeseries}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
$x+y=z$
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotRt"></a>}}
\subsection{Method \code{plotRt()}}{
Plot the EpiEstim output in a standard way
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$plotRt(
  covidRtTimeseries,
  colour = NULL,
  events = self$datasets$getSignificantDates() \%>\% filter(Significance == 1),
  rtlim = c(0.5, 2.5),
  dates = "2020-03-01",
  ribbons = ("Quantile.0.025(R)" \%in\% colnames(covidRtTimeseries)),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{rtlim}}{- the max and min or Rt to display}

\item{\code{dates}}{- the min (and optionally max) dates to display as a YYYY-MM-DD character (or anything that can be coerced to a Date)}

\item{\code{df}}{a df containing an Rt timeseries, including a date and a `Median(R)` column from EpiEstim}

\item{\code{group}}{- the colour aesthetic}

\item{\code{dateVar}}{- the name of the date column}

\item{\code{facetVars}}{- the facetting variables}

\item{\code{features}}{-}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotGrowthRate"></a>}}
\subsection{Method \code{plotGrowthRate()}}{
Plot the growth rate
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$plotGrowthRate(
  covidRtTimeseries,
  colour = NULL,
  events = self$datasets$getSignificantDates() \%>\% filter(Significance == 1),
  rlim = c(-0.25, 0.25),
  dates = "2020-03-01",
  ribbons = TRUE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{colour}}{- the colour aesthetic}

\item{\code{rlim}}{- the max and min or Rt to display}

\item{\code{dates}}{- the min (and optionally max) dates to display as a YYYY-MM-DD character (or anything that can be coerced to a Date)}

\item{\code{ribbons}}{- display the confidence limit as ribbons}

\item{\code{df}}{a df containing an Rt timeseries, including a date and a `Median(R)` column from EpiEstim}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotWindowedGrowthRate"></a>}}
\subsection{Method \code{plotWindowedGrowthRate()}}{
Plot the growth rate
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$plotWindowedGrowthRate(
  covidRtTimeseries,
  colour = NULL,
  events = self$datasets$getSignificantDates() \%>\% filter(Significance == 1),
  rlim = c(-0.25, 0.25),
  dates = "2020-03-01",
  ribbons = TRUE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{colour}}{- the colour aesthetic}

\item{\code{rlim}}{- the max and min or Rt to display}

\item{\code{dates}}{- the min (and optionally max) dates to display as a YYYY-MM-DD character (or anything that can be coerced to a Date)}

\item{\code{ribbons}}{- display the confidence limit as ribbons}

\item{\code{df}}{a df containing an Rt timeseries, including a date and a `Median(R)` column from EpiEstim}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotDefault"></a>}}
\subsection{Method \code{plotDefault()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$plotDefault(
  data,
  events = dpc$datasets$getSignificantDates() \%>\% filter(Significance == 1),
  dates = "2020-03-01",
  ylim = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotIncidenceQuantiles"></a>}}
\subsection{Method \code{plotIncidenceQuantiles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$plotIncidenceQuantiles(
  covidTimeseries,
  denominatorExpr = NA,
  colour = NULL,
  events = dpc$datasets$getSignificantDates() \%>\% filter(Significance == 1),
  dates = "2020-03-01",
  ribbons = TRUE,
  ylim = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotIncidenceRollmean"></a>}}
\subsection{Method \code{plotIncidenceRollmean()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$plotIncidenceRollmean(
  covidTimeseries,
  denominatorExpr = NA,
  events = dpc$datasets$getSignificantDates() \%>\% filter(Significance == 1),
  dates = "2020-03-01",
  ylim = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setSerialInterval"></a>}}
\subsection{Method \code{setSerialInterval()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$setSerialInterval(
  cfg = self$defaultSerialInterval(),
  epiEstimConfig = cfg$config,
  method = cfg$method,
  window = cfg$window,
  sources = cfg$sources
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-printSerialInterval"></a>}}
\subsection{Method \code{printSerialInterval()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$printSerialInterval(
  si = self$defaultSerialInterval(confint)$config,
  confint = c(0.1, 0.9)
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-printSerialIntervalSources"></a>}}
\subsection{Method \code{printSerialIntervalSources()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$printSerialIntervalSources(
  serialIntervals = self$defaultSerialInterval()$sources
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-defaultSerialInterval"></a>}}
\subsection{Method \code{defaultSerialInterval()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$defaultSerialInterval(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-resampledSerialInterval"></a>}}
\subsection{Method \code{resampledSerialInterval()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$resampledSerialInterval(
  confint = c(0.025, 0.975),
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-midmarketSerialInterval"></a>}}
\subsection{Method \code{midmarketSerialInterval()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$midmarketSerialInterval(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TimeseriesProcessingPipeline$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
